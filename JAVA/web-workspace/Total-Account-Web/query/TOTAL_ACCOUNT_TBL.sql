-- SCOTT
--------------------------------------------------------
--- 1-1. MEMBER 테이블
DROP TABLE T_MEMBER;
CREATE TABLE T_MEMBER(
    ID VARCHAR2(20) PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    PASSWORD VARCHAR2(20) NOT NULL,
    RRN VARCHAR2(30) UNIQUE NOT NULL,
    EMAIL_ID VARCHAR2(30),
    EMAIL_DOMAIN VARCHAR(20),
    TEL1 CHAR(3),
    TEL2 CHAR(4),
    TEL3 CHAR(4),
    POST CHAR(7),
    BASIC_ADDR VARCHAR2(200),
    DETAIL_ADDR VARCHAR2(200),
    TYPE CHAR(1) DEFAULT 'U',
    REG_DATE DATE DEFAULT SYSDATE
);

--- 1-2. TEST 데이터
INSERT INTO T_MEMBER(ID, NAME, PASSWORD, RRN, EMAIL_ID, EMAIL_DOMAIN, TEL1, TEL2, TEL3, POST, BASIC_ADDR, DETAIL_ADDR)
VALUES('9bonseong','구본성','1234','950101-1111111', '9bonseong', 'naver.com','010','4773','9853','12345','서울특별시','동대문구 이문로 199 503');

INSERT INTO T_MEMBER(ID, NAME, PASSWORD, RRN, EMAIL_ID, EMAIL_DOMAIN, TEL1, TEL2, TEL3, POST, BASIC_ADDR, DETAIL_ADDR)
VALUES('ADMIN','구본성','ADMIN','950101-2222222' ,'ADMIN',  'naver.com', '010','4773','9853','12345','서울특별시','동대문구 이문로 199 503');

INSERT INTO T_MEMBER(ID, NAME, PASSWORD, RRN, EMAIL_ID, EMAIL_DOMAIN, TEL1, TEL2, TEL3, POST, BASIC_ADDR, DETAIL_ADDR)
VALUES('test','test','test','950101-3333333', 'ADMIN','naver.com', '010','4773','9853','12345','서울특별시','동대문구 이문로 199 503');

commit;
SELECT ID, NAME, RRN FROM T_MEMBER WHERE ID='test' AND PASSWORD='test' AND RRN='950101-3333333';


--------------------------------------------------------
--- 2.1 BANK_INFO 테이블
DROP TABLE BANK_INFO;
CREATE TABLE BANK_INFO(
    BANK_CODE NUMBER(4) PRIMARY KEY, 
    BANK_NAME VARCHAR2(20),
    BANK_NAME_ENG VARCHAR2(20)
   ) ;

--- 2.2 TEST 데이터
INSERT INTO BANK_INFO(BANK_CODE, BANK_NAME, BANK_NAME_ENG) VALUES(600, '세진저축은행', '세진저축은행');
INSERT INTO BANK_INFO(BANK_CODE, BANK_NAME, BANK_NAME_ENG) VALUES(700, 'WC', 'WC');
INSERT INTO BANK_INFO(BANK_CODE, BANK_NAME, BANK_NAME_ENG) VALUES(800, 'MG구마을금고', 'MG');
--INSERT INTO BANK_INFO(BANK_CODE, BANK_NAME, BANK_NAME_ENG) VALUES(900, 'TVA', 'TVA');

SELECT * FROM BANK_INFO;

--------------------------------------------------------
--- 3.1 ACCOUNT 테이블
DROP TABLE T_ACCOUNT;

CREATE TABLE T_ACCOUNT( 
    ACC_NO VARCHAR2(20) PRIMARY KEY, 
    BANK_CODE NUMBER(4) NOT NULL,
    ID VARCHAR2(20) NOT NULL, 
    BALANCE NUMBER(20) NOT NULL, 
	ACC_PW VARCHAR2(30) NOT NULL, 
	ACC_NICKNAME VARCHAR2(20), 
	ACC_CREATING_DATE VARCHAR2(20) DEFAULT SYSDATE, 
	ACC_ISACTIVE VARCHAR2(20) DEFAULT 'ACTIVE',
    FOREIGN KEY (BANK_CODE) REFERENCES BANK_INFO(BANK_CODE),
    FOREIGN KEY (ID) REFERENCES T_MEMBER(ID)
   );
SELECT * FROM T_ACCOUNT;

--- 3.2 TEST 데이터
INSERT INTO T_ACCOUNT(ACC_NO, BANK_CODE, ID, BALANCE, ACC_PW, ACC_NICKNAME) VALUES ('111-111-111', 600, 'test', 100000, '1234', 'test');
INSERT INTO T_ACCOUNT(ACC_NO, BANK_CODE, ID, BALANCE, ACC_PW, ACC_NICKNAME) VALUES ('222-222-222', 600, 'test', 100000, '1234', 'test');
UPDATE T_ACCOUNT SET BALANCE = 10000 WHERE ID='test';

COMMIT;

--------------------------------------------------------
--- 4.1 TRANSFER_LOG 테이블
DROP SEQUENCE TRANSFER_LOG_SEQ;
CREATE SEQUENCE TRANSFER_LOG_SEQ;

DROP TABLE TRANSFER_LOG;
CREATE TABLE TRANSFER_LOG(
    LOG_NO NUMBER(10) DEFAULT TRANSFER_LOG_SEQ.NEXTVAL PRIMARY KEY,
    LOG_DATE DATE DEFAULT SYSDATE,
    SENDING_BANK_NAME VARCHAR2(20) NOT NULL,
    SENDING_ACC_NO VARCHAR2(20) NOT NULL,
    BEFORE_BALANCE NUMBER(20) NOT NULL,
    REMITTANCE NUMBER(20) NOT NULL,
    AFTER_BALANCE NUMBER(20) NOT NULL,
    RECEIVING_BANK_NAME VARCHAR2(20) NOT NULL,
    RECEIVING_ACC_NO VARCHAR2(20) NOT NULL
);

--- 4.2 TEST 데이터
BEGIN
    UPDATE T_ACCOUNT SET BALANCE = BALANCE + 10000 WHERE ACC_NO = '111-111-111';
    UPDATE T_ACCOUNT SET BALANCE = BALANCE - 10000 WHERE ACC_NO = '222-222-222';
    INSERT INTO TRANSFER_LOG(SENDING_BANK_NAME, SENDING_ACC_NO, BEFORE_BALANCE, REMITTANCE, AFTER_BALANCE, RECEIVING_BANK_NAME, RECEIVING_ACC_NO)
    VALUES ('세진저축은행', '111-111-111', 100000, 10000, 90000, '세진저축은행', '222-222-222');
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK;
END;
/


--------------------------------------------------------
--- 5.1 T_OPENBANK_ACCOUNT 테이블
DROP TABLE T_OPENBANK_ACCOUNT;
CREATE TABLE T_OPENBANK_ACCOUNT(
    NO NUMBER DEFAULT OPENBANK_ACCOUNT_SEQ.NEXTVAL PRIMARY KEY,
    OPEN_BANK_NAME VARCHAR2(100),
    OPEN_ACC_NO VARCHAR2(100),
    ID VARCHAR2(100),
    CONSTRAINT ID_FK FOREIGN KEY(ID) REFERENCES T_MEMBER(ID));
    
DROP SEQUENCE T_BOARD_SEQ;
CREATE SEQUENCE T_BOARD_SEQ;

--------------------------------------------------------
--- 6.1 T_BOARD 테이블
DROP TABLE T_BOARD;
CREATE TABLE T_BOARD(
    NO NUMBER DEFAULT T_BOARD_SEQ.NEXTVAL PRIMARY KEY,
    UPPER_NO NUMBER DEFAULT 0,
    TITLE VARCHAR2(300),
    WRITER VARCHAR2(500),
    CONTENT VARCHAR2(1000),
    VIEW_CNT NUMBER DEFAULT 0,
    REG_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT WRITER_FK FOREIGN KEY(WRITER) REFERENCES T_MEMBER(ID)
);