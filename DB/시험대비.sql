-- SELECT
SELECT ENAME, INSTR(ENAME, 'A'), INSTR(ENAME, 'A', 2), INSTR(ENAME, 'A', 1, 2) FROM EMP;

SELECT SUBSTR(ADDRESS1, INSTR(ADDRESS1, ' ', 1, 1)+1, INSTR(ADDRESS1, ' ', 1, 2)- INSTR(ADDRESS1, ' ', 1,1)) FROM CUSTOMER;


SELECT * FROM SYSTEM;
SELECT * FROM RESOURCE_USAGE;

SELECT DISTINCT S.SYSTEM_ID, S.SYSTEM_NAME,
    DECODE((SELECT COUNT (*) FROM RESOURCE_USAGE WHERE SYSTEM_ID=S.SYSTEM_ID AND RESOURCE_NAME='FTP'),1,'사용','미사용') AS FTP
FROM SYSTEM S, RESOURCE_USAGE U WHERE S.SYSTEM_ID = U.SYSTEM_ID(+) ORDER BY SYSTEM_ID;


SELECT DISTINCT S.SYSTEM_ID AS SYSTEM , S.SYSTEM_NAME,
DECODE((SELECT COUNT(*) FROM RESOURCE_USAGE WHERE SYSTEM_ID=S.SYSTEM_ID AND RESOURCE_NAME = 'FTP'  ),1,'사용','미사용') AS FTP,
DECODE((SELECT COUNT(*) FROM RESOURCE_USAGE WHERE SYSTEM_ID=S.SYSTEM_ID AND RESOURCE_NAME = 'TELNET '  ),1,'사용','미사용') AS TELNET,
DECODE((SELECT COUNT(*) FROM RESOURCE_USAGE WHERE SYSTEM_ID=S.SYSTEM_ID AND RESOURCE_NAME = 'EMAIL'  ),1,'사용','미사용') AS EMAIL
FROM SYSTEM S, RESOURCE_USAGE R 
WHERE S.SYSTEM_ID = R.SYSTEM_ID(+)
ORDER BY SYSTEM;

SELECT DEPTNO, ENAME, JOB, SAL,
DENSE_RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS RANK FROM EMP;

SELECT ADDRESS1 FROM CUSTOMER;


-- EQUI JOIN
SELECT DNAME, ENAME, JOB, SAL FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.JOB IN ('MANAGER', 'CLERK');

SELECT * FROM(SELECT DEPTNO, ENAME, JOB, SAL,
DENSE_RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS RANK FROM EMP) WHERE RANK<=3;

-- NON EQUI JOIN
SELECT E.ENAME, E.JOB, E.SAL, S.GRADE FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;

SELECT * FROM SALGRADE;
SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT E.ENAME, E.JOB, E.SAL, S.GRADE FROM EMP E, SALGRADE S, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL;


-- OUTER JOIN
SELECT D.DNAME, NVL(E.ENAME, '비상근부서'), E.JOB, E.SAL FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO
ORDER BY D.DNAME;

-- 상관서브쿼리

SELECT DEPTNO, ENAME, JOB, SAL FROM EMP M
WHERE SAL > (SELECT AVG(SAL) AS AVG_SAL FROM EMP WHERE JOB = M.JOB);

SELECT ENAME, SAL FROM EMP WHERE SAL < (SELECT AVG(SAL) FROM EMP);

SELECT DNAME, LOC, DEPTNO FROM DEPT WHERE DEPTNO IN (SELECT DEPTNO FROM EMP GROUP BY DEPTNO HAVING COUNT(*) > 3);

-- 스칼라 서브쿼리
SELECT DEPTNO, ENAME, JOB, SAL, (SELECT ROUND(AVG(SAL),0) FROM EMP S WHERE S.JOB = M.JOB) AS JOB_AVG_SAL
FROM EMP M ORDER BY DEPTNO;

-- 인라인뷰
SELECT DEPTNO, ENAME, EMP.JOB, SAL, IV.AVG_SAL
FROM EMP, (SELECT JOB, ROUND(AVG(SAL)) AS AVG_SAL FROM EMP GROUP BY JOB) IV 
WHERE EMP.JOB = IV.JOB AND SAL > IV.AVG_SAL
ORDER BY DEPTNO, SAL DESC;

CREATE TABLE EMP_TEST AS SELECT * FROM EMP WHERE DEPTNO=10;

MERGE INTO EMP_TEST ET
    USING EMP E
    ON (ET.EMPNO = E.EMPNO)
    WHEN MATCHED THEN
        UPDATE SET ET.SAL = E.SAL*1.5
    WHEN NOT MATCHED THEN
        INSERT VALUES (E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO);


--1
SELECT E.DEPTNO, D.DNAME, E.ENAME, E.SAL FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
SELECT D.DNAME, E.ENAME FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.ENAME ='ALLEN';
SELECT E.ENAME, E.DEPTNO, D.DNAME, E.SAL FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO(+);
SELECT E.ENAME||' ''s manager is '||NVL(E2.ENAME, 'NOBODY') FROM EMP E, EMP E2 WHERE E.MGR = E2.EMPNO(+); 
SELECT E.ENAME, D.DNAME, E.SAL, E.JOB FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN');
SELECT D.DEPTNO, E.EMPNO, E.ENAME, E.HIREDATE, E.SAL FROM EMP E, DEPT D WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'JONES');
SELECT EMPNO, ENAME, HIREDATE, SAL FROM EMP WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'JONES');
SELECT E.EMPNO, E.ENAME, D.DNAME, E.HIREDATE, D.LOC, E.SAL FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND SAL > (SELECT ROUND(AVG(SAL))FROM EMP);
SELECT E.EMPNO, E.JOB, E.ENAME, D.DNAME, E.HIREDATE, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.DEPTNO = 10 AND E.JOB IN (SELECT JOB FROM EMP WHERE DEPTNO = 20);
SELECT E.EMPNO, E.JOB, E.ENAME, D.DNAME, E.HIREDATE, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.JOB NOT IN (SELECT JOB FROM EMP WHERE DEPTNO = 30);
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL IN (SELECT SAL FROM EMP WHERE ENAME IN ('MARTIN', 'SCOTT'));
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30);
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL < (SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 30);

SELECT D.DEPTNO, COUNT(ENAME)
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND HIREDATE < TO_DATE('1982-01-01', 'YYYY-MM-DD')
GROUP BY D.DEPTNO;

SELECT E.DEPTNO, D.DNAME, E.ENAME FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO;

SELECT E.DEPTNO, D.DNAME, E.ENAME FROM EMP E RIGHT OUTER JOIN DEPT D ON E.DEPTNO = D.DEPTNO;


CREATE TABLE EMP_TEST AS (SELECT * FROM EMP WHERE DEPTNO=10);
MERGE INTO EMP_TEST ET USING EMP E ON (ET.EMPNO = E.EMPNO)
    WHEN MATCHED THEN
        UPDATE SET ET.SAL = SAL * 1.2
    WHEN NOT MATCHED THEN
        INSERT VALUES (E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO);
        
        
SELECT DEPTNO,COUNT(*),SUM(SAL),AVG(SAL) FROM EMP;    

SELECT * FROM EMP;

SELECT
    SUM(CASE WHEN DEPTNO = 10 THEN 1 ELSE 0 END) AS "10번 부서",
    SUM(CASE WHEN DEPTNO = 20 THEN 1 ELSE 0 END) AS "20번 부서",
    SUM(CASE WHEN DEPTNO = 30 THEN 1 ELSE 0 END) AS "30번 부서"
FROM EMP;

SELECT 0012345600,
    TO_CHAR(0012345600,'999999999'), -- 자릿수 내에서 표기
    TO_CHAR(0012345600,'000000000') -- 자릿수 내에서 표기하고 자릿수가 남으면 0
    FROM DUAL;
    
SELECT 123456,
    TO_CHAR(123456,'999999'),
    LENGTH(TO_CHAR(123456, '999999')), -- 부호를 표기하기 때문에 길이가 7
    LENGTH(TO_CHAR(123456, 'fm999999')) -- 공백제거
    FROM DUAL;
    
    
SELECT TO_CHAR(12345*123.45, '999,999.99'), -- 자리수 내 표기할 수 없기 때문에 999,999.99의 자릿수인 10 만큼 # 표기
    TO_CHAR(12345*123.45, '99,999,999.99') FROM DUAL;  
    
SELECT E.DEPTNO, D.DNAME, E.ENAME FROM SCOTT.EMP E RIGHT OUTER JOIN SCOTT.DEPT D
ON E.DEPTNO = D.DEPTNO
ORDER BY D.DEPTNO; -- null 출력

SELECT D.DEPTNO, D.DNAME, E.ENAME FROM SCOTT.EMP E FULL OUTER JOIN SCOTT.DEPT D
ON E.DEPTNO = D.DEPTNO
ORDER BY E.DEPTNO;


SELECT EMP.DEPTNO, EMP.ENAME, EMP.JOB, EMP.SAL, IV.AVG_SAL
FROM EMP, (SELECT DEPTNO, ROUND(AVG(SAL)) AS AVG_SAL FROM EMP GROUP BY DEPTNO) IV 
WHERE EMP.DEPTNO = IV.DEPTNO
ORDER BY EMP.DEPTNO, SAL DESC;













-- 스칼라 서브쿼리
SELECT DEPTNO, ENAME, JOB, SAL, (SELECT ROUND(AVG(SAL)) FROM EMP S WHERE S.DEPTNO = M.DEPTNO) AS AVG_SAL
FROM EMP M ORDER BY DEPTNO;

-- 상관 서브쿼리
SELECT DEPTNO, ENAME, JOB, SAL FROM EMP M
WHERE SAL > (SELECT AVG(SAL) AS AVG_SAL FROM EMP WHERE JOB = M.JOB);

-- 인라인뷰
SELECT E.DEPTNO, E.ENAME, E.JOB, E.SAL, IV.AVG_SAL
FROM EMP E, (SELECT DEPTNO, ROUND(AVG(SAL)) AS AVG_SAL FROM EMP GROUP BY DEPTNO) IV
WHERE E.DEPTNO = IV.DEPTNO
ORDER BY DEPTNO;

SELECT TO_CHAR(HIREDATE, 'MM'), COUNT (HIREDATE) FROM EMP GROUP BY TO_CHAR(HIREDATE, 'MM');

SELECT DEPTNO, JOB, ENAME, SAL FROM EMP
WHERE (DEPTNO, JOB) IN (SELECT DEPTNO, JOB FROM EMP GROUP BY DEPTNO, JOB HAVING AVG(SAL) > 2000);


select lengthb(111111111), vsize(256) from dual;
SELECT TO_CHAR(SAL, '$999,999'),
    REPLACE(TO_CHAR(SAL, '$999.999'), ' ', '?'),
    TO_CHAR(SAL, 'L999,999'), -- NLS_CURRENCY : ￦ (원)
    TO_CHAR(SAL, '999,999'),
    TO_CHAR(SAL,'fm999,999L')
    FROM EMP;
    
    
    
SELECT DEPTNO, JOB, ENAME, SAL, (SELECT ROUND(AVG(SAL)) FROM EMP E2 WHERE E.DEPTNO = E2.DEPTNO GROUP BY DEPTNO) AS AVG_SAL FROM EMP E ORDER BY E.DEPTNO;

SELECT E.DEPTNO, E.JOB, E.ENAME, E.SAL, IV.AVG_SAL FROM EMP E, (SELECT DEPTNO, ROUND(AVG(SAL)) AS AVG_SAL FROM EMP GROUP BY DEPTNO) IV
WHERE E.DEPTNO = IV.DEPTNO
ORDER BY E.DEPTNO;

SELECT DEPTNO, ENAME, JOB, SAL FROM EMP M
WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE JOB = M.JOB);