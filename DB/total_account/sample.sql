DROP TABLE TRANSFER_LOG;
DROP TABLE ACCOUNT;
DROP TABLE USER_INFO;
DROP TABLE BANK;
CREATE TABLE BANK(
    BANK_CODE VARCHAR2(20) CONSTRAINT BANK_CODE_PK PRIMARY KEY,
    BANK_NAME VARCHAR2(20) CONSTRAINT BANK_NAME_NN NOT NULL
);

CREATE TABLE USER_INFO(
    USER_NO      NUMBER(10) CONSTRAINT USER_INFO_NO_PK      PRIMARY KEY, 
    ID           VARCHAR2(20) CONSTRAINT USER_INFO_ID_UN_NN UNIQUE NOT NULL, 
    PW           VARCHAR2(20) CONSTRAINT USER_INFO_PW_NN   NOT NULL, 
    USER_NAME    VARCHAR2(20) CONSTRAINT USER_INFO_NAME_NN   NOT NULL, 
    MOBILE_NO    VARCHAR2(20)
);

CREATE TABLE ACCOUNT(
    ACC_ID NUMBER(10) CONSTRAINT ACC_ID_PK PRIMARY KEY,
    BANK_CODE VARCHAR2(20),
    USER_NO NUMBER(10),
    ACC_NO VARCHAR2(20) CONSTRAINT ACC_NO_UK_NN UNIQUE NOT NULL,
    BALANCE NUMBER(20) DEFAULT 0 CONSTRAINT ACC_BALANCE_NN NOT NULL,
    ACC_PW VARCHAR2(20) CONSTRAINT ACC_PW_NN NOT NULL,
    ACC_NICKNAME VARCHAR2(20),
    ACC_CREATING_DATE DATE DEFAULT SYSDATE,
    ACC_ISACTIVE VARCHAR2(20) DEFAULT 'ACTIVE' CONSTRAINT ACC_ISACTIVE_NN NOT NULL,
    CONSTRAINT ACC_BANK_CODE_FK FOREIGN KEY (BANK_CODE) REFERENCES BANK(BANK_CODE),
    CONSTRAINT ACC_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES USER_INFO(USER_NO)
);

CREATE TABLE TRANSFER_LOG(
    LOG_NO NUMBER(20) CONSTRAINT TRS_LOG_PK PRIMARY KEY,
    LOG_DATE DATE DEFAULT SYSDATE CONSTRAINT TRS_LOG_DATE_NN NOT NULL,
    SENDING_ACC_ID NUMBER(10),
    RECEIVING_ACC_ID NUMBER(10),
    REMITTANCE NUMBER(20) CONSTRAINT TRS_LOG_MON_NN NOT NULL,
    
    CONSTRAINT TRS_LOG_SENDING_ACC_ID_FK FOREIGN KEY (SENDING_ACC_ID) REFERENCES ACCOUNT(ACC_ID),
    CONSTRAINT TRS_LOG_RECEIVING_ACC_ID_FK FOREIGN KEY (RECEIVING_ACC_ID) REFERENCES ACCOUNT(ACC_ID)
);

INSERT INTO BANK VALUES('1000','HANA');
INSERT INTO BANK VALUES('2000','SHINHAN');
INSERT INTO BANK VALUES('3000','KB');
INSERT INTO BANK VALUES('4000','WOORI');


DROP SEQUENCE USER_NO;
CREATE SEQUENCE SCOTT.USER_NO
    INCREMENT BY    1 -- 1씩 증가
    START WITH      1 -- 시작값
    MAXVALUE        9999999 -- 최댓값
    MINVALUE        1 
    NOCYCLE         -- CYCLE : 최댓값까지 가면 다시 1부터
    CACHE           3000; -- 자주 사용하는 값



INSERT INTO USER_INFO VALUES(USER_NO.NEXTVAL, 'test', 'test', '구본성', '010-4773-9853');
INSERT INTO USER_INFO VALUES(USER_NO.NEXTVAL, 'test1', 'test1', '유저1', '010-1234-5678');
INSERT INTO USER_INFO VALUES(USER_NO.NEXTVAL, 'test2', 'test2', '유저2', '010-2345-6789');
INSERT INTO USER_INFO VALUES(USER_NO.NEXTVAL, 'test3', 'test3', '유저3', '010-3456-7890');
INSERT INTO USER_INFO VALUES(USER_NO.NEXTVAL, 'test4', 'test4', '유저4', '010-4567-8901');
INSERT INTO USER_INFO VALUES(USER_NO.NEXTVAL, 'test5', 'test5', '유저5', '010-4567-8901');

DROP SEQUENCE ACC_NO;
CREATE SEQUENCE SCOTT.ACC_NO
    INCREMENT BY    1 -- 1씩 증가
    START WITH      1 -- 시작값
    MAXVALUE        9999999 -- 최댓값
    MINVALUE        1 
    NOCYCLE         -- CYCLE : 최댓값까지 가면 다시 1부터
    CACHE           3000; -- 자주 사용하는 값

INSERT INTO ACCOUNT VALUES (ACC_NO.NEXTVAL, '1000', 1, '111-222-333', 1000000, '1234', '주택청약', TO_DATE('16/01/01','yy/mm/dd'), 'ACTIVE');
INSERT INTO ACCOUNT VALUES (ACC_NO.NEXTVAL, '2000', 2, '222-555-666', 2000000, '4321', '적금', TO_DATE('17/01/01','yy/mm/dd'), 'ACTIVE');
INSERT INTO ACCOUNT VALUES (ACC_NO.NEXTVAL, '3000', 3, '333-888-999', 3000000, '1234', '비트코인', TO_DATE('18/01/01','yy/mm/dd'), 'ACTIVE');
INSERT INTO ACCOUNT VALUES (ACC_NO.NEXTVAL, '3000', 3, '333-345-678', 3000000, '1111', '비상금', TO_DATE('19/01/01','yy/mm/dd'), 'ACTIVE');
INSERT INTO ACCOUNT VALUES (ACC_NO.NEXTVAL, '4000', 4, '444-645-545', 4000000, '1111', '밥값', TO_DATE('21/06/01','yy/mm/dd'), 'ACTIVE');
INSERT INTO ACCOUNT VALUES (ACC_NO.NEXTVAL, '4000', 1, '444-625-545', 4000000, '1111', '확인용', TO_DATE('21/06/02','yy/mm/dd'), 'ACTIVE');

DROP SEQUENCE LOG_NO;
CREATE SEQUENCE SCOTT.LOG_NO
    INCREMENT BY    1 -- 1씩 증가
    START WITH      1 -- 시작값
    MAXVALUE        9999999 -- 최댓값
    MINVALUE        1 
    NOCYCLE         -- CYCLE : 최댓값까지 가면 다시 1부터
    CACHE           3000; -- 자주 사용하는 값
    

INSERT INTO TRANSFER_LOG VALUES (LOG_NO.NEXTVAL, SYSDATE, 1, 2, 10000);
INSERT INTO TRANSFER_LOG VALUES (LOG_NO.NEXTVAL, SYSDATE, 1, 2, 20000);
INSERT INTO TRANSFER_LOG VALUES (LOG_NO.NEXTVAL, SYSDATE, 1, 3, 50000);
INSERT INTO TRANSFER_LOG VALUES (LOG_NO.NEXTVAL, SYSDATE, 2, 3, 40000);
INSERT INTO TRANSFER_LOG VALUES (LOG_NO.NEXTVAL, SYSDATE, 4, 1, 50000);

commit;
