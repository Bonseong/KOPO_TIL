CREATE OR REPLACE PACKAGE BODY P_EMPLOYEE
AS
    V_ENAME EMP.ENAME%TYPE;
    V_ROWS  NUMBER(6);
    
    FUNCTION PRVT_FUNC(P_NUM IN NUMBER) RETURN NUMBER IS
    BEGIN
        RETURN P_NUM;
    END PRVT_FUNC;
    
    PROCEDURE INSERT_EMP(P_EMPNO NUMBER, P_ENAME VARCHAR2, P_JOB VARCHAR2, P_SAL NUMBER, P_DEPTNO NUMBER)
    IS
    BEGIN
        INSERT INTO EMP(EMPNO, ENAME, JOB, SAL, DEPTNO) VALUES(P_EMPNO, P_ENAME, P_JOB, P_SAL, P_DEPTNO);
        COMMIT;
    END INSERT_EMP;
    
    PROCEDURE DELETE_EMP(P_EMPNO EMP.EMPNO%TYPE) IS
    BEGIN
        DELETE ROM EMP WHERE EMPNO = P_EMPNO;
        COMMIT;
        GV_ROWS := GV_ROWS + SQL%ROWCOUNT;
        V_ROWS := PRVT_FUNC(GV_ROWS);
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            WRITE_LOG('P_EMPLOYEE.DELETE', SQLERRM, 'VALUES : [EMPNO]=>'||P_EMPNO);
    END DELETE_EMP;
    
    FUNCTION SEARCH_MNG(P_EMPNO EMP.EMPNO%TYPE) RETURN VARCHAR2
    IS
        V_ENAME EMP.ENAME%TYPE;
    BEGIN
        SELECT ENAME INTO V_ENAME FROM EMP
        WHERE EMPNO = (SELECT MGR FROM EMP WHERE EMPNO = P_EMPNO);
        RETURN V_ENAME;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            V_ENAME := 'NO_DATE';
            RETURN V_ENAME;
        WHEN OTHERS THEN
            V_ENAME := SUBSTR(SQLERRM, 1, 12);
            RETURN V_ENAME;
        END SEARCH_MNG;
BEGIN
    GV_ROWS := 0;
END P_EMPLOYEE; 
/

DESC P_EMPLOYEE
/



BEGIN
P_EMPLOYEE.GV_ROWS := 100; -- PUBLIC 변수 참조 => 사용자 직접 참조 가능
--P_EMPLOYEE.V_ROWS := 100; -- PRIVATE 변수 참조 => 사용자 직접 참조 불가능
END;

/
BEGIN
P_EMPLOYEE.DELETE_EMP(1111);
P_EMPLOYEE.INSERT_EMP(1111,'PACKAGE', 'CIO',9999,10);

P_EMPLOYEE.DELETE_EMP(1112);
P_EMPLOYEE.INSERT_EMP(1112,'PACKAGE2','CTO',9999,20);
P_EMPLOYEE.DELETE_EMP(1112);
DBMS_OUTPUT.PUT_LINE('DELETED ROWS => '||P_EMPLOYEE.GV_ROWS);
END;
/


select * from emp;

DECLARE
 V_ENAME EMP.ENAME%TYPE;
BEGIN
 V_ENAME := P_EMPLOYEE.SEARCH_MNG(1111);
 DBMS_OUTPUT.PUT_LINE('MANAGER NAME => '||V_ENAME);
END;
/