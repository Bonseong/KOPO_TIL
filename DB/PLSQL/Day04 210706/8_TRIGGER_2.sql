CREATE TABLE RETIRED_EMP(
    EMPNO   NUMBER(4) NOT NULL,
    ENAME   VARCHAR2(10),
    JOB     VARCHAR2(9),
    RETIRED_DATE DATE
);

CREATE TABLE LABOR_UNION(
    EMPNO   NUMBER(4) NOT NULL,
    ENAME   VARCHAR2(10),
    JOB     VARCHAR2(9),
    ENROLL_DATE DATE
);

CREATE OR REPLACE TRIGGER TRG_EMP_CHANGE
BEFORE INSERT OR DELETE OR UPDATE OF SAL ON EMP
FOR EACH ROW
DECLARE

BEGIN
    -- INSERT / DELETE / UPDATE 에 대한 이벤트 분리
    IF INSERTING AND :NEW.JOB IN ('CLERK', 'SALESMAN') THEN -- 입사시 직원 테이블에 넣음
        INSERT INTO LABOR_UNION(EMPNO, ENAME, JOB, ENROLL_DATE) VALUES (:NEW.EMPNO, :NEW.ENAME, :NEW.JOB, SYSDATE);
    
    ELSIF DELETING THEN
        BEGIN -- 삭제(퇴사)시 퇴사자 테이블에 넣고 직원 테이블에서 삭제
            INSERT INTO RETIRED_EMP(EMPNO, ENAME, JOB, RETIRED_DATE) VALUES (:OLD.EMPNO, :OLD.ENAME, :OLD.JOB, SYSDATE);
            
            DELETE FROM LABOR_UNION WHERE EMPNO =:OLD.EMPNO;
        EXCEPTION
            WHEN OTHERS THEN
                NULL;
        END;
    ELSIF UPDATING THEN -- 업데이트 시 급여가 <0이면 이전 급여로 대체
        IF :NEW.SAL < 0 THEN
            :NEW.SAL := :OLD.SAL;
        END IF;
    END IF;
END;
/


select * from emp where empno = 7369;
delete from emp where empno = 7369;

select * from user_constraints where table_name = 'emp';


BEGIN
    P_EMPLOYEE.DELETE_EMP(7369);
    P_EMPLOYEE.INSERT_EMP(7369,'PACKAGE', 'CIO',9999,10);
    
    P_EMPLOYEE.DELETE_EMP(7369);
    P_EMPLOYEE.INSERT_EMP(1112,'PACKAGE2','CTO',9999,20);
    P_EMPLOYEE.DELETE_EMP(1112);

END;
/


BEGIN
    
    P_EMPLOYEE.DELETE_EMP(7369);
    -- P_EMPLOYEE.INSERT_EMP(2025, 'JJANG', 'PRESIDENT', 0000, 10);
    -- P_EMPLOYEE.INSERT_EMP(10, 'KIM', 'SALESMAN', 5555, 10);
END;
/



SELECT * FROM EMP WHERE EMPNO = 7369;
UPDATE EMP SET SAL = -1000 WHERE EMPNO = 7900;

select * from emp;
SELECT * FROM RETIRED_EMP;
SELECT * FROM LABOR_UNION WHERE EMPNO IN (2025, 10);
SELECT EMPNO, SAL FROM EMP WHERE EMPNO = 7900;

아 네! 감사합니다 :)